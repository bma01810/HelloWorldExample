# example workflow for Black Duck scans using the Synopsys Action
# https://github.com/marketplace/actions/synopsys-action
name: blackduck
on:
  push:
    branches: [ main, master, develop, stage, release ]
  pull_request:
    branches: [ main, master, develop, stage, release ]
  workflow_dispatch:
jobs:
  blackduck:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Source
      uses: actions/checkout@v4
   # - name: Setup Python
   #   uses: actions/setup-python@v5.2.0
   #   with:
   #   python-version: '3.9'
   #   cache: 'pip' # caching pip dependencies
    - name: Get Dependencies
      run: | 
        which python3
        which pip
        python3 -m venv .venv
        ls -al 
        source .venv/bin/activate
        pip install -r requirements.txt
        pip show exp10it
        pip show gradio
        tar -zcf site-packages.tar.gz /home/runner/work/HelloWorldExample/HelloWorldExample/.venv/lib/python3.12/site-packages
   # - name: Setup Java JDK
   # uses: actions/setup-java@v4
   #  with:
   #    java-version: 17
   #    distribution: microsoft
   #    cache: maven
   #- name: Maven Build
   #  run: mvn -B -DskipTests package
    - name: Black Duck Scan
      uses: synopsys-sig/synopsys-action@v1.12.0
      run: source .venv/bin/activate
      env:
        DETECT_PROJECT_NAME: ${{ github.event.repository.name }}
   #     DETECT_TOOLS: DETECTOR
        DETECT_TOOLS: DETECTOR,THREAT_INTEL
        DETECT_THREATINTEL_SCAN_FILE_PATH: site-packages.tar.gz
      with:
        blackduck_url: ${{ vars.BLACKDUCK_URL }}
        blackduck_token: ${{ secrets.BLACKDUCK_API_TOKEN }}
        blackduck_scan_failure_severities: 'ALL'
        blackduck_fixpr_enabled: true
        blackduck_prComment_enabled: true
        blackduck_reports_sarif_create: true
        blackduck_upload_sarif_report: true
        github_token: ${{ secrets.GITHUB_TOKEN }}
        # include_diagnostics: true
#    - name: Save Logs
#      if: always()
#      uses: actions/upload-artifact@v4
#      with:
#        name: bridge-logs
#        path: ${{ github.workspace }}/.bridge
